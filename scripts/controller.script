local RIGHT = hash("right")
local LEFT = hash("left")
local UP = hash("up")
local DOWN = hash("down")
local CHOOSE = hash("choose")
local TRIGGER = hash("trigger_response")
local OWNGROUP = hash("controller")
local GUI_ON = hash("gui_enabled")
local GUI_OFF = hash("gui_disabled")

local shift = 144
local other_pos = vmath.vector3(0, 0, 0)

local markers = require 'modules.markers'
function Reset(self)
	go.set_position(vmath.vector3(640, 360, 1))
	self.pos  =  go.get_position()
	self.empty = true
	self.other_id = nil
	self.selected = false
	self.chip = 0
end


function CoordsSolver(self, x, y)
	if ((self.pos.x + x < 352 or self.pos.x + x > 928) or 
		(self.pos.y + y < 0 or self.pos.y + y > 720)) then
			return false
	end
	return true
end

function init(self)
	self.pos  =  go.get_position()
	self.empty = true
	self.other_id = nil
	self.selected = false
	self.chip = 0
	msg.post(".", "acquire_input_focus")	
end



function final(self)
	msg.post(".", "release_input_focus")  
end


function on_message(self, message_id, message, sender)
	if message_id == TRIGGER then
		if message.enter then
			if(message.own_group) ~= OWNGROUP then 
				markers.enter(message.own_group)
			else
				self.other_id = message.other_id
				self.chip = self.chip + 1
			end
		else 
			if(message.own_group) ~= OWNGROUP then 
				markers.exit(message.own_group)
		else
			self.chip = self.chip - 1
			if self.chip == 0 and not self.selected then self.other_id = nil end
		end
		end

	elseif message_id == GUI_ON then 
		msg.post(".", "release_input_focus")
	elseif message_id == GUI_OFF then 
		msg.post(".", "acquire_input_focus")

	elseif message_id == hash("reset") then Reset(self)
	end
end

function on_input(self, action_id, action)
	if self.selected then 
	end
	
	if action_id == LEFT and action.pressed then
		if(CoordsSolver(self, -shift, 0)) then
			if (self.selected and markers.getLeft() == 0) then
				go.set_position(vmath.vector3(self.pos.x - shift, self.pos.y, 1))
				go.set_position(vmath.vector3(self.pos.x - shift, self.pos.y, 0.5), self.other_id)
			elseif not self.selected then
				go.set_position(vmath.vector3(self.pos.x - shift, self.pos.y, 1))
			end
		end
	elseif action_id == RIGHT and action.pressed then
		if(CoordsSolver(self, shift, 0)) then
			if (self.selected and markers.getRight() == 0) then
				go.set_position(vmath.vector3(self.pos.x + shift, self.pos.y, 1))
				go.set_position(vmath.vector3(self.pos.x + shift, self.pos.y, 0.5), self.other_id)
			elseif not self.selected then
				go.set_position(vmath.vector3(self.pos.x + shift, self.pos.y, 1))
			end
		end
	elseif action_id == UP and action.pressed then
		if(CoordsSolver(self, 0, shift)) then
			if (self.selected and markers.getUp() == 0) then
				go.set_position(vmath.vector3(self.pos.x , self.pos.y + shift, 1))
				go.set_position(vmath.vector3(self.pos.x , self.pos.y + shift, 0.5), self.other_id)
			elseif not self.selected then
				go.set_position(vmath.vector3(self.pos.x , self.pos.y + shift, 1))
			end
		end
	elseif action_id == DOWN and action.pressed then
		if(CoordsSolver(self, 0, -shift)) then			
			if (self.selected and markers.getDown() == 0) then
				go.set_position(vmath.vector3(self.pos.x, self.pos.y - shift, 1))
				go.set_position(vmath.vector3(self.pos.x , self.pos.y - shift, 0.5), self.other_id)
			elseif not self.selected then
				go.set_position(vmath.vector3(self.pos.x, self.pos.y - shift, 1))
			end
		end
	elseif action_id == CHOOSE and action.pressed then
		if not self.selected then
			if self.chip ~= 0 then
				msg.post("#sprite", "play_animation", {id = hash("filed_selected")})
				self.selected = true
			end
		else 
			msg.post("#sprite", "play_animation", {id = hash("controller_default")})
			self.selected = false
			msg.post("GameManager#GameManager", "check")
		end
	end
	
	self.pos = go.get_position()
end

function on_reload(self)
end
